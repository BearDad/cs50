v1:





v2:

  def main():
      name = get_name()
      house = get_house()
      print(f"{name} from {house}")
  
  
  def get_name():
      return input("Name: ")
  
  
  def get_house():
      return input("House: ")
  
  
  if __name__ == "__main__":
      main()


v3: 
  def main():
      student = get_student()
      print(f"{student[0]} from {student[1]}")
      print(student)
  
  
  def get_student():
      # using a list of tuples
      name = input("Name: ")
      house = input("House: ")
      return (name, house)
  
  
  if __name__ == "__main__":
      main()



v4:

  class Student:
      def __init__(self, name, house, patronus=""):
          if not name:
              raise ValueError("Missing name")
          if house not in ["Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"]:
              raise ValueError("Invalid house name")
          self.name = name
          self.house = house
          self.patronus = patronus
  
      def __str__(self):
          return f"{self.name} from {self.house}."
  
      def charm(self):
          match self.patronus:
              case "Stag":
                  return "🐉"
              case "Otter":
                  return "🦦"
              case "Jack Russell Terrier":
                  return "🐶"
              case _:
                  return "🦄"
  
  
  def main():
      student = get_student()
      print("expecto patronum")
      print(student.charm())
  
  
  def get_student():
      name = input("Name: ")
      house = input("House: ")
      patronus = input("Patronus: ")
      return Student(name, house, patronus)
  
  
  if __name__ == "__main__":
      main()
v.5:
class Student:
    def __init__(self, name, house):
        self.name = name
        self.house = house

    def __str__(self):
        return f"{self.name} from {self.house}."

    # getter-name
    @property
    def name(self):
        return self._name

    # setter-name
    @name.setter
    def name(self, name):
        if not name:
            raise ValueError("Missing name")
        self._name = name

    # getter-house
    @property
    def house(self):
        return self._house

    # setter-house
    @house.setter
    def house(self, house):
        if house not in ["Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"]:
            raise ValueError("Invalid house name")

        self._house = house


def main():
    student = get_student()
    print(student)


def get_student():
    name = input("Name: ")
    house = input("House: ")
    return Student(name, house)


if __name__ == "__main__":
    main()
